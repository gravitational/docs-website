name: Docs Preview
on:
  pull_request:
  merge_group:

permissions:
  pull-requests: write
  id-token: write

jobs:
  amplify-preview:
    if: ${{ github.event_name != 'merge_group' }}
    name: Amplify Preview
    runs-on: ubuntu-22.04-2core-arm64
    environment: docs-amplify
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
      with:
        aws-region: us-west-2
        role-to-assume: ${{ vars.IAM_ROLE }}

    - name: Get Amplify Preview URL
      uses: gravitational/shared-workflows/tools/amplify-preview@664e788d45a7f56935cf63094b4fb52a41b12015 # tools/amplify-preview/v0.0.2
      id: amplify_preview
      with:
        app_ids: ${{ vars.AMPLIFY_APP_IDS }}
        create_branches: "false"
        github_token: ${{ secrets.GITHUB_TOKEN }}
        wait: "true"
        wait_interval: 60s


    - name: Print failure message
      if: failure()
      env:
        ERR_TITLE: Teleport Docs preview build failed
        ERR_MESSAGE: >-
          Please refer to the following documentation for help: https://www.notion.so/goteleport/How-to-Amplify-deployments-162fdd3830be8096ba72efa1a49ee7bc?pvs=4.
          Execution info: ${{ steps.amplify_preview.outputs.amplify_app_id }} ${{ steps.amplify_preview.outputs.amplify_branch_name }} ${{ steps.amplify_preview.outputs.amplify_job_id }}
      run: |
        echo ::error title=$ERR_TITLE::$ERR_MESSAGE
        exit 1

  # If the event is merge_group, we want to make sure the build passes with the
  # most recent version of the docs content to prevent unexpected inputs from
  # breaking the build. Execute a local build on the GitHub Actions runner
  # without a preview link.
  local-preview:
    if: ${{ github.event_name == 'merge_group'}}
    name: Amplify Preview
    runs-on: ubuntu-22.04-4core-arm64
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 23
          cache: 'yarn'
      - name: Install deps
        run: yarn

      - name: Cache tarball downloads
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: .downloads/
          key: tarball-downloads-${{ hashFiles('.downloads/*.tar.gz') }}

      - name: Prepare docs site configuration
        # Replace data fetched from goteleport.com/api/data/navigation with hard coded JSON objects. 
        # Each includes the minimal set of data required for docs builds to succeed.
        run: |
          NEW_PACKAGE_JSON=$(jq '.scripts."prepare-sanity-data" = "echo Using pre-populated Sanity data"' package.json);
          echo "$NEW_PACKAGE_JSON" > package.json;
          echo "{}" > data/events.json
          echo '{"bannerButtons":{"second":{"title":"LOG IN","url":"https://teleport.sh"},"first":{"title":"Support","url":"https://goteleport.com/support/"}},"navbarData":{"rightSide":{},"logo":{"url":"/favicon.svg","menuItems":[]}}' > data/navbar.json

      - name: Build the docs with the latest content
        run: yarn build
